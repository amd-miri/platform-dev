<?php

/**
 * @file
 * Module file.
 */

include_once 'includes/nexteuropa_integration_producer.entity.inc';
include_once 'includes/nexteuropa_integration_producer.hooks.inc';
include_once 'includes/nexteuropa_integration_producer.admin.inc';

use Drupal\nexteuropa_integration\Document\DocumentInterface;
use Drupal\nexteuropa_integration\Producer\EntityWrapper\EntityWrapper;
use Drupal\nexteuropa_integration\Producer\Configuration\ProducerConfiguration;

/**
 * Implements hook_permission().
 */
function nexteuropa_integration_producer_permission() {
  return array(
    'administer producers' => array(
      'title' => t('Administer integration layer producers'),
    ),
  );
}

/**
 * Determines whether the given user can perform actions on an entity.
 *
 * @param string $op
 *   Operation being performed: 'view', 'update', 'create' or 'delete'.
 * @param ProducerConfiguration|NULL $producer
 *   Optionally an entity to check access for.
 * @param object|NULL $account
 *   The user to check for. Leave it to NULL to check for the global user.
 * @param string|NULL $entity_type
 *   The entity type of the entity to check for.
 *
 * @return bool
 *   Whether access is allowed or not.
 *
 * @see entity_type_supports()
 * @see nexteuropa_integration_producer_entity_info()
 */
function nexteuropa_integration_producer_access($op, $producer, $account, $entity_type) {
  return user_access('administer producers');
}

/**
 * Collect and return list of producer definitions.
 *
 * @return array
 *    List of producer definitions.
 */
function nexteuropa_integration_producer_get_producer_info() {
  $producers = module_invoke_all('nexteuropa_integration_producer_info');
  drupal_alter('nexteuropa_integration_producer_info', $producers);
  return $producers;
}

/**
 * Collect and return list of producer field handler definitions.
 *
 * @return array
 *    List of producer field handler definitions.
 */
function nexteuropa_integration_producer_get_field_handler_info() {
  $field_handlers = module_invoke_all('nexteuropa_integration_producer_field_handler_info');
  drupal_alter('nexteuropa_integration_producer_field_handler_info', $field_handlers);
  return $field_handlers;
}


/**
 * Implements hook_nexteuropa_integration_producer_document_build_alter().
 */
function nexteuropa_integration_producer_nexteuropa_integration_producer_document_build_alter(EntityWrapper $entity_wrapper, DocumentInterface $document) {
  // Make sure that we have full entity URL in generated document.
  // @todo: this hook should actually be implemented by an external module.
  $languages = language_list();
  $entity_type = $entity_wrapper->type();
  $entity = $entity_wrapper->value();
  $uri = entity_uri($entity_type, $entity);

  foreach ($document->getAvailableLanguages() as $code) {
    $language = NULL;
    $options = array('absolute' => TRUE);
    if (isset($languages[$code])) {
      $options['language'] = $languages[$code];
    }
    $document->setCurrentLanguage($code);
    $document->setField('origin', url($uri['path'], $options));
  }
}
